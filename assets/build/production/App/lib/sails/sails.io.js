(function(){var e=(function(){if(typeof window!=="object"||typeof window.document!=="object"||typeof window.document.getElementsByTagName!=="function"){return""}var g=window.document.getElementsByTagName("script");var f=g[g.length-1];return f.src})();var c={version:"__sails_io_sdk_version",platform:"__sails_io_sdk_platform",language:"__sails_io_sdk_language"};var d={version:"0.11.0",platform:typeof module==="undefined"?"browser":"node",language:"javascript"};d.versionString=c.version+"="+d.version+"&"+c.platform+"="+d.platform+"&"+c.language+"="+d.language;var b=(typeof io!=="undefined")?io:null;function a(m){if(!m){m=b}if(!m){throw new Error("`sails.io.js` requires a socket.io client, but `io` was not passed in.")}function j(n){n=n||{prefix:true};if(typeof console!=="object"||typeof console.log!=="function"||typeof console.log.bind!=="function"){return function p(){}}return function o(){var q=Array.prototype.slice.call(arguments);if(m.sails.environment==="production"){return}var r="";if(n.prefix){q.unshift(r)}console.log.bind(console).apply(this,q)}}var g=j();g.noPrefix=j({prefix:false});function k(o){var n=o.requestQueue;if(!n){return}for(var p in n){var q=({}).hasOwnProperty.call(n,p);if(q){f(o,n[p])}}n=null}function l(p,n){p=p||{};if(typeof window==="undefined"){return n()}var o=document.createElement("script");window._sailsIoJSConnect=function(q){o.parentNode.removeChild(o);n(q)};o.src=p.url;document.getElementsByTagName("head")[0].appendChild(o)}function h(n){this.body=n.body||{};this.headers=n.headers||{};this.statusCode=n.statusCode||200;if(this.statusCode<200||this.statusCode>=400){this.error=this.body||this.statusCode}}h.prototype.toString=function(){return"[ResponseFromSails]  -- Status: "+this.statusCode+"  -- Headers: "+this.headers+"  -- Body: "+this.body};h.prototype.toPOJO=function(){return{body:this.body,headers:this.headers,statusCode:this.statusCode}};h.prototype.pipe=function(){return new Error("Client-side streaming support not implemented yet.")};function f(o,q){if(!o._raw){throw new Error("Failed to emit from socket- raw SIO socket is missing.")}var n=q.cb;delete q.cb;var p=q.method;o._raw.emit(p,q,function r(s){if(n){n(s.body,new h(s))}})}function i(o){var n=this;o=o||{};n.useCORSRouteToGetCookie=o.useCORSRouteToGetCookie;n.url=o.url;n.multiplex=o.multiplex;n.transports=o.transports;n.query=o.query;n.eventQueue={};n.on("sails:parseError",function(p){g("Sails encountered an error parsing a socket message sent from this client, and did not have access to a callback function to respond with.");g("Error details:",p)})}i.prototype._connect=function(){var p=this;p.useCORSRouteToGetCookie=p.useCORSRouteToGetCookie||m.sails.useCORSRouteToGetCookie;p.url=p.url||m.sails.url;p.transports=p.transports||m.sails.transports;p.query=p.query||m.sails.query;p.url=p.url?p.url.replace(/(\/)$/,""):undefined;if(typeof p.query!=="string"){p.query=d.versionString}else{p.query+="&"+d.versionString}var o=(function(){if(typeof window==="undefined"||typeof window.location==="undefined"){return false}if(typeof p.url!=="string"){return false}var v=(function(){try{v=p.url.match(/^([a-z]+:\/\/)/i)[1].toLowerCase()}catch(y){}v=v||"http://";return v})();var t=!!p.url.match("^https");var u=(function(){try{return p.url.match(/^[a-z]+:\/\/[^:]*:([0-9]*)/i)[1]}catch(y){}return t?"443":"80"})();var r=p.url.replace(/^([a-z]+:\/\/)/i,"");if(v.replace(/[:\/]/g,"")!==window.location.protocol.replace(/[:\/]/g,"")){return true}var w=r.search(window.location.hostname)===0;if(!w){return true}var x=window.location.protocol.match(/https/i);var s=(window.location.port+"")||(x?"443":"80");if(u!==s){return true}return false})();(function n(r){if(!(p.useCORSRouteToGetCookie&&o)){return r()}var s=p.url;if(typeof p.useCORSRouteToGetCookie==="string"){s+=p.useCORSRouteToGetCookie}else{s+="/__getcookie"}if(typeof window!=="undefined"){l({url:s,method:"GET"},r);return}var t=require("request");t.get(s,function(w,v,u){if(w){g("Failed to connect socket (failed to get cookie)","Error:",w);return}r()})})(function q(){p._raw=m(p.url,p);p.replay();p.on("connect",function s(){g.noPrefix("\n\n  |>    Now connected to Sails.\n\\___/   For help, see: http://bit.ly/1DmTvgK\n        (using "+m.sails.sdk.platform+" SDK @v"+m.sails.sdk.version+")\n\n\n")});p.on("disconnect",function(){p.connectionLostTimestamp=(new Date()).getTime();g("====================================");g("Socket was disconnected from Sails.");g("Usually, this is due to one of the following reasons:\n -> the server "+(p.url?p.url+" ":"")+"was taken down\n -> your browser lost internet connectivity");g("====================================")});p.on("reconnecting",function(t){g("\n        Socket is trying to reconnect to Sails...\n_-|>_-  (attempt #"+t+")\n\n")});p.on("reconnect",function(w,u){var v=((new Date()).getTime()-p.connectionLostTimestamp);var t=(v/1000);g("\n  |>    Socket reconnected successfully after\n\\___/   being offline for ~"+t+" seconds.\n\n")});p.on("error",function r(t){g("Failed to connect socket (probably due to failed authorization on server)","Error:",t)})})};i.prototype.disconnect=function(){if(!this._raw){throw new Error("Cannot disconnect- socket is already disconnected")}return this._raw.disconnect()};i.prototype.isConnected=function(){if(!this._raw){return false}return !!this._raw.connected};i.prototype.replay=function(){var n=this;for(var p in n.eventQueue){for(var o in n.eventQueue[p]){n._raw.on(p,n.eventQueue[p][o])}}if(!n.isConnected()){var r=false;n._raw.on("connect",function q(){if(r){return}k(n);r=true})}else{k(n)}return n};i.prototype.on=function(n,o){if(this._raw){this._raw.on(n,o);return this}if(!this.eventQueue[n]){this.eventQueue[n]=[o]}else{this.eventQueue[n].push(o)}return this};i.prototype.off=function(n,o){if(this._raw){this._raw.off(n,o);return this}if(this.eventQueue[n]&&this.eventQueue[n].indexOf(o)>-1){this.eventQueue[n].splice(this.eventQueue[n].indexOf(o),1)}return this};i.prototype.removeAllListeners=function(){if(this._raw){this._raw.removeAllListeners();return this}this.eventQueue={};return this};i.prototype.get=function(o,p,n){if(typeof p==="function"){n=p;p={}}return this.request({method:"get",params:p,url:o},n)};i.prototype.post=function(o,p,n){if(typeof p==="function"){n=p;p={}}return this.request({method:"post",data:p,url:o},n)};i.prototype.put=function(o,p,n){if(typeof p==="function"){n=p;p={}}return this.request({method:"put",params:p,url:o},n)};i.prototype["delete"]=function(o,p,n){if(typeof p==="function"){n=p;p={}}return this.request({method:"delete",params:p,url:o},n)};i.prototype.request=function(p,n){var q='Usage:\nsocket.request( options, [fnToCallWhenComplete] )\n\noptions.url :: e.g. "/foo/bar"\noptions.method :: e.g. "get", "post", "put", or "delete", etc.\noptions.params :: e.g. { emailAddress: "mike@sailsjs.org" }\noptions.headers :: e.g. { "x-my-custom-header": "some string" }';if(typeof p!=="object"||typeof p.url!=="string"){throw new Error("Invalid or missing URL!\n"+q)}if(p.method&&typeof p.method!=="string"){throw new Error('Invalid `method` provided (should be a string like "post" or "put")\n'+q)}if(p.headers&&typeof p.headers!=="object"){throw new Error("Invalid `headers` provided (should be an object with string values)\n"+q)}if(p.params&&typeof p.params!=="object"){throw new Error("Invalid `params` provided (should be an object with string values)\n"+q)}if(n&&typeof n!=="function"){throw new Error("Invalid callback function!\n"+q)}var o={method:p.method.toLowerCase()||"get",headers:p.headers||{},data:p.params||p.data||{},url:p.url.replace(/^(.+)\/*\s*$/,"$1"),cb:n};if(!this.isConnected()){this.requestQueue=this.requestQueue||[];this.requestQueue.push(o);return}f(this,o)};i.prototype._request=function(o,n){throw new Error("`_request()` was a private API deprecated as of v0.11 of the sails.io.js client. Use `.request()` instead.")};m.sails={autoConnect:true,useCORSRouteToGetCookie:true,environment:e.match(/(\#production|\.min\.js)/g)?"production":"development",sdk:d,transports:["polling","websocket"]};m.sails.connect=function(o,p){p=p||{};p.url=o||p.url||undefined;var n=new i(p);n._connect();return n};m.socket=new i();setTimeout(function(){if(!m.sails.autoConnect){delete m.socket;return}m.socket._connect()},0);return m}if(typeof module==="object"&&typeof module.exports!=="undefined"){module.exports=a;return a}else{if(typeof define==="function"&&define.amd){define([],function(){return a})}else{return a()}}})();